{"version":3,"sources":["components/Elements.js","components/Skills.js","App.js","serviceWorker.js","index.js"],"names":["Elements","Keyframes","Spring","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","from","top","transform","config","duration","color","borderRadius","border","stop","_x","apply","this","arguments","Skills","props","react_default","createElement","className","children","App","state","toggle","_this","setState","Container","renderprops","marginTop","to","style","components_Elements","native","div","objectSpread","position","width","height","left","right","id","Col","xl","NavLink","href","onClick","components_Skills","Component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f13cb162.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Keyframes} from 'react-spring/renderprops'\r\n\r\nconst Elements = Keyframes.Spring(async next => {\r\n    while (true) {\r\n      await next({\r\n        from: {top: '20%',transform: 'rotate(0deg)'},\r\n        config: {duration:3000},\r\n        color: 'transparent',\r\n        top: '26%',\r\n        borderRadius: 12,\r\n        border: '17px solid #0CA8D9',\r\n        transform: 'rotate(180deg)',\r\n\r\n      })\r\n      await next({\r\n        from: {top: '26%', transform: 'rotate(180deg)'},\r\n        top: '30%',\r\n        config: {duration:3000},\r\n        transform: 'rotate(0deg)',\r\n      })\r\n      await next({\r\n        from: {top: '30%', transform: 'rotate(0deg)'},\r\n        top: '26%',\r\n        config: {duration:3000},\r\n        transform: 'rotate(180deg)',\r\n      })\r\n      await next({\r\n        from: {top: '26%', transform: 'rotate(180deg)'},\r\n        top: '35%',\r\n        config: {duration:3000},\r\n        transform: 'rotate(0deg)',\r\n      })\r\n      await next({\r\n        from: {top: '35%', transform: 'rotate(0deg)'},\r\n        top: '26%',\r\n        config: {duration:3000},\r\n        transform: 'rotate(180deg)',\r\n      })\r\n    }\r\n  })\r\nexport default Elements;\r\n","import React from 'react'\r\n\r\nfunction Skills(props) {\r\n    return (\r\n        <div className=\"skillsfn\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Skills;","import React, {Component} from 'react'\nimport { Container, Col, NavLink } from 'reactstrap'\nimport './style/main.sass'\nimport Elements from './components/Elements'\nimport Skills from './components/Skills'\nimport {animated, Spring } from 'react-spring/renderprops'\n\nexport default class App extends Component {\n    state = { toggle: true }\n    toggle = () => { this.setState(state=>({ toggle: !state.toggle }))}\n    render() {\n      const toggle = this.state.toggle\n        return (\n            <Container>\n            <Spring\n                from={{\n                marginTop: toggle ? '0%' : '-10%',\n                }}\n                to={{\n                marginTop: toggle ? '0%' : '-10%',\n                }}\n                >{props =>\n            <div className=\"fullcontent\" style={props}>\n            <Elements native>\n            {props => (\n            <animated.div\n              style={{ position: 'fixed', width:60,height:60, left:'25%', marginTop:'5%', ...props }}\n            />\n          )}\n            </Elements>\n            <Elements native>\n            {props => (\n            <animated.div\n              style={{ position: 'fixed', width:30,height:30, left:'45%', ...props }}\n            />\n          )}\n            </Elements>\n            <Elements native>\n            {props => (\n            <animated.div\n              style={{ position: 'fixed', width:15,height:15, right:'35%', marginTop: '20%', ...props }}\n            />\n          )}\n            </Elements>\n                <div id=\"backgroundtext\">\n                    <p id=\"bgtext\">FRONT END</p>\n                </div>\n                <Col xl=\"1\"><p id=\"jobtext\">Junior Front End Developer<br/>from Germany</p></Col>\n                <Col xl=\"5\">\n                <div id=\"fronttext\">\n                </div>\n                </Col>\n                <Col xl=\"5\">\n                <div id=\"fronttext\">\n                    <p id=\"fttext\">Hello<span>.</span></p>\n                    <p id=\"fttext\">I am</p>\n                    <p id=\"fttext\">Ruslan</p>\n                </div>\n                </Col>\n                <Col xl=\"1\">\n                <div className=\"media\">\n                <NavLink href=\"https://github.com/Sio5\" id=\"medial\">Github</NavLink>\n                <NavLink href=\"https://www.instagram.com/4views.de/\" id=\"medial\">Instagram</NavLink>\n                <NavLink href=\"mailto:4views.de@gmail.com\" id=\"medial\">Mail</NavLink>\n                </div>\n                </Col>\n            </div>}\n            </Spring>\n                <div className=\"skills\">\n                <Col><p onClick={this.toggle}>Front-End</p></Col>\n                <Col><p onClick={this.toggle}>Sorce Controll</p></Col> \n                <Col><p onClick={this.toggle}>Seo</p></Col> \n                <Col><p onClick={this.toggle}>FrameWorks</p></Col> \n                <Col><p onClick={this.toggle}>UI/UX</p></Col> \n                </div>\n                <div id=\"skills\" onClick={this.toggle}>\n                <Skills>\n                <Col>JavaScript ES6<br/>CSS / SASS<br/>HTML</Col>\n                <Col>Github<br/>Git(Git Flow)</Col>\n                <Col>Keyword Research<br/>OnPage<br/>Content writing</Col>\n                <Col>ReactJS<br/>React Native<br/>Bootstrap</Col>\n                <Col>Prototyping<br/>Adobe PSD<br/>Figma</Col>\n                </Skills>\n                </div>\n            </Container>\n        )\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style/main.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}